<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/type/money.proto
//   Date: 2016-11-23 22:55:01

namespace google\type {

  class Money extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $currency_code = null;
    
    /**  @var int */
    public $units = null;
    
    /**  @var int */
    public $nanos = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.type.Money');

      // OPTIONAL STRING currency_code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "currency_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 units = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "units";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 nanos = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "nanos";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <currency_code> has a value
     *
     * @return boolean
     */
    public function hasCurrencyCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <currency_code> value
     *
     * @return \google\type\Money
     */
    public function clearCurrencyCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <currency_code> value
     *
     * @return string
     */
    public function getCurrencyCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <currency_code> value
     *
     * @param string $value
     * @return \google\type\Money
     */
    public function setCurrencyCode( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <units> has a value
     *
     * @return boolean
     */
    public function hasUnits(){
      return $this->_has(2);
    }
    
    /**
     * Clear <units> value
     *
     * @return \google\type\Money
     */
    public function clearUnits(){
      return $this->_clear(2);
    }
    
    /**
     * Get <units> value
     *
     * @return int
     */
    public function getUnits(){
      return $this->_get(2);
    }
    
    /**
     * Set <units> value
     *
     * @param int $value
     * @return \google\type\Money
     */
    public function setUnits( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <nanos> has a value
     *
     * @return boolean
     */
    public function hasNanos(){
      return $this->_has(3);
    }
    
    /**
     * Clear <nanos> value
     *
     * @return \google\type\Money
     */
    public function clearNanos(){
      return $this->_clear(3);
    }
    
    /**
     * Get <nanos> value
     *
     * @return int
     */
    public function getNanos(){
      return $this->_get(3);
    }
    
    /**
     * Set <nanos> value
     *
     * @param int $value
     * @return \google\type\Money
     */
    public function setNanos( $value){
      return $this->_set(3, $value);
    }
  }
}

