<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/type.proto

namespace Google\Protobuf;

/**
 * <pre>
 * Basic field types.
 * </pre>
 *
 * Protobuf enum <code>google.protobuf.Field.Kind</code>
 */
class Field_Kind
{
    /**
     * <pre>
     * Field type unknown.
     * </pre>
     *
     * <code>TYPE_UNKNOWN = 0;</code>
     */
    const TYPE_UNKNOWN = 0;
    /**
     * <pre>
     * Field type double.
     * </pre>
     *
     * <code>TYPE_DOUBLE = 1;</code>
     */
    const TYPE_DOUBLE = 1;
    /**
     * <pre>
     * Field type float.
     * </pre>
     *
     * <code>TYPE_FLOAT = 2;</code>
     */
    const TYPE_FLOAT = 2;
    /**
     * <pre>
     * Field type int64.
     * </pre>
     *
     * <code>TYPE_INT64 = 3;</code>
     */
    const TYPE_INT64 = 3;
    /**
     * <pre>
     * Field type uint64.
     * </pre>
     *
     * <code>TYPE_UINT64 = 4;</code>
     */
    const TYPE_UINT64 = 4;
    /**
     * <pre>
     * Field type int32.
     * </pre>
     *
     * <code>TYPE_INT32 = 5;</code>
     */
    const TYPE_INT32 = 5;
    /**
     * <pre>
     * Field type fixed64.
     * </pre>
     *
     * <code>TYPE_FIXED64 = 6;</code>
     */
    const TYPE_FIXED64 = 6;
    /**
     * <pre>
     * Field type fixed32.
     * </pre>
     *
     * <code>TYPE_FIXED32 = 7;</code>
     */
    const TYPE_FIXED32 = 7;
    /**
     * <pre>
     * Field type bool.
     * </pre>
     *
     * <code>TYPE_BOOL = 8;</code>
     */
    const TYPE_BOOL = 8;
    /**
     * <pre>
     * Field type string.
     * </pre>
     *
     * <code>TYPE_STRING = 9;</code>
     */
    const TYPE_STRING = 9;
    /**
     * <pre>
     * Field type group. Proto2 syntax only, and deprecated.
     * </pre>
     *
     * <code>TYPE_GROUP = 10;</code>
     */
    const TYPE_GROUP = 10;
    /**
     * <pre>
     * Field type message.
     * </pre>
     *
     * <code>TYPE_MESSAGE = 11;</code>
     */
    const TYPE_MESSAGE = 11;
    /**
     * <pre>
     * Field type bytes.
     * </pre>
     *
     * <code>TYPE_BYTES = 12;</code>
     */
    const TYPE_BYTES = 12;
    /**
     * <pre>
     * Field type uint32.
     * </pre>
     *
     * <code>TYPE_UINT32 = 13;</code>
     */
    const TYPE_UINT32 = 13;
    /**
     * <pre>
     * Field type enum.
     * </pre>
     *
     * <code>TYPE_ENUM = 14;</code>
     */
    const TYPE_ENUM = 14;
    /**
     * <pre>
     * Field type sfixed32.
     * </pre>
     *
     * <code>TYPE_SFIXED32 = 15;</code>
     */
    const TYPE_SFIXED32 = 15;
    /**
     * <pre>
     * Field type sfixed64.
     * </pre>
     *
     * <code>TYPE_SFIXED64 = 16;</code>
     */
    const TYPE_SFIXED64 = 16;
    /**
     * <pre>
     * Field type sint32.
     * </pre>
     *
     * <code>TYPE_SINT32 = 17;</code>
     */
    const TYPE_SINT32 = 17;
    /**
     * <pre>
     * Field type sint64.
     * </pre>
     *
     * <code>TYPE_SINT64 = 18;</code>
     */
    const TYPE_SINT64 = 18;
}

