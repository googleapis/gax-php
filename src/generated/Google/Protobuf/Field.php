<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/type.proto

namespace Google\Protobuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A single field of a message type.
 * </pre>
 *
 * Protobuf type <code>google.protobuf.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The field type.
     * </pre>
     *
     * <code>.google.protobuf.Field.Kind kind = 1;</code>
     */
    private $kind = 0;
    /**
     * <pre>
     * The field cardinality.
     * </pre>
     *
     * <code>.google.protobuf.Field.Cardinality cardinality = 2;</code>
     */
    private $cardinality = 0;
    /**
     * <pre>
     * The field number.
     * </pre>
     *
     * <code>int32 number = 3;</code>
     */
    private $number = 0;
    /**
     * <pre>
     * The field name.
     * </pre>
     *
     * <code>string name = 4;</code>
     */
    private $name = '';
    /**
     * <pre>
     * The field type URL, without the scheme, for message or enumeration
     * types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.
     * </pre>
     *
     * <code>string type_url = 6;</code>
     */
    private $type_url = '';
    /**
     * <pre>
     * The index of the field type in `Type.oneofs`, for message or enumeration
     * types. The first type has index 1; zero means the type is not in the list.
     * </pre>
     *
     * <code>int32 oneof_index = 7;</code>
     */
    private $oneof_index = 0;
    /**
     * <pre>
     * Whether to use alternative packed wire representation.
     * </pre>
     *
     * <code>bool packed = 8;</code>
     */
    private $packed = false;
    /**
     * <pre>
     * The protocol buffer options.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 9;</code>
     */
    private $options;
    /**
     * <pre>
     * The field JSON name.
     * </pre>
     *
     * <code>string json_name = 10;</code>
     */
    private $json_name = '';
    /**
     * <pre>
     * The string value of the default value of this field. Proto2 syntax only.
     * </pre>
     *
     * <code>string default_value = 11;</code>
     */
    private $default_value = '';

    public function __construct() {
        \GPBMetadata\Google\Protobuf\Type::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The field type.
     * </pre>
     *
     * <code>.google.protobuf.Field.Kind kind = 1;</code>
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     * <pre>
     * The field type.
     * </pre>
     *
     * <code>.google.protobuf.Field.Kind kind = 1;</code>
     */
    public function setKind($var)
    {
        GPBUtil::checkEnum($var, \Google\Protobuf\Field_Kind::class);
        $this->kind = $var;
    }

    /**
     * <pre>
     * The field cardinality.
     * </pre>
     *
     * <code>.google.protobuf.Field.Cardinality cardinality = 2;</code>
     */
    public function getCardinality()
    {
        return $this->cardinality;
    }

    /**
     * <pre>
     * The field cardinality.
     * </pre>
     *
     * <code>.google.protobuf.Field.Cardinality cardinality = 2;</code>
     */
    public function setCardinality($var)
    {
        GPBUtil::checkEnum($var, \Google\Protobuf\Field_Cardinality::class);
        $this->cardinality = $var;
    }

    /**
     * <pre>
     * The field number.
     * </pre>
     *
     * <code>int32 number = 3;</code>
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * <pre>
     * The field number.
     * </pre>
     *
     * <code>int32 number = 3;</code>
     */
    public function setNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->number = $var;
    }

    /**
     * <pre>
     * The field name.
     * </pre>
     *
     * <code>string name = 4;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The field name.
     * </pre>
     *
     * <code>string name = 4;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * The field type URL, without the scheme, for message or enumeration
     * types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.
     * </pre>
     *
     * <code>string type_url = 6;</code>
     */
    public function getTypeUrl()
    {
        return $this->type_url;
    }

    /**
     * <pre>
     * The field type URL, without the scheme, for message or enumeration
     * types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.
     * </pre>
     *
     * <code>string type_url = 6;</code>
     */
    public function setTypeUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->type_url = $var;
    }

    /**
     * <pre>
     * The index of the field type in `Type.oneofs`, for message or enumeration
     * types. The first type has index 1; zero means the type is not in the list.
     * </pre>
     *
     * <code>int32 oneof_index = 7;</code>
     */
    public function getOneofIndex()
    {
        return $this->oneof_index;
    }

    /**
     * <pre>
     * The index of the field type in `Type.oneofs`, for message or enumeration
     * types. The first type has index 1; zero means the type is not in the list.
     * </pre>
     *
     * <code>int32 oneof_index = 7;</code>
     */
    public function setOneofIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->oneof_index = $var;
    }

    /**
     * <pre>
     * Whether to use alternative packed wire representation.
     * </pre>
     *
     * <code>bool packed = 8;</code>
     */
    public function getPacked()
    {
        return $this->packed;
    }

    /**
     * <pre>
     * Whether to use alternative packed wire representation.
     * </pre>
     *
     * <code>bool packed = 8;</code>
     */
    public function setPacked($var)
    {
        GPBUtil::checkBool($var);
        $this->packed = $var;
    }

    /**
     * <pre>
     * The protocol buffer options.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 9;</code>
     */
    public function getOptions()
    {
        return $this->options;
    }

    /**
     * <pre>
     * The protocol buffer options.
     * </pre>
     *
     * <code>repeated .google.protobuf.Option options = 9;</code>
     */
    public function setOptions(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Protobuf\Option::class);
        $this->options = $arr;
    }

    /**
     * <pre>
     * The field JSON name.
     * </pre>
     *
     * <code>string json_name = 10;</code>
     */
    public function getJsonName()
    {
        return $this->json_name;
    }

    /**
     * <pre>
     * The field JSON name.
     * </pre>
     *
     * <code>string json_name = 10;</code>
     */
    public function setJsonName($var)
    {
        GPBUtil::checkString($var, True);
        $this->json_name = $var;
    }

    /**
     * <pre>
     * The string value of the default value of this field. Proto2 syntax only.
     * </pre>
     *
     * <code>string default_value = 11;</code>
     */
    public function getDefaultValue()
    {
        return $this->default_value;
    }

    /**
     * <pre>
     * The string value of the default value of this field. Proto2 syntax only.
     * </pre>
     *
     * <code>string default_value = 11;</code>
     */
    public function setDefaultValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->default_value = $var;
    }

}

