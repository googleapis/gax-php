<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/distribution.proto

namespace Google\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Specify a sequence of buckets that have a width that is proportional to
 * the value of the lower bound.  Each bucket represents a constant relative
 * uncertainty on a specific value in the bucket.
 * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
 * bucket i:
 *    Upper bound (0 &lt;= i &lt; N-1):     scale * (growth_factor ^ i).
 *    Lower bound (1 &lt;= i &lt; N):       scale * (growth_factor ^ (i - 1)).
 * </pre>
 *
 * Protobuf type <code>google.api.Distribution.BucketOptions.Exponential</code>
 */
class Distribution_BucketOptions_Exponential extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    private $num_finite_buckets = 0;
    /**
     * <pre>
     * Must be greater than 1.
     * </pre>
     *
     * <code>double growth_factor = 2;</code>
     */
    private $growth_factor = 0.0;
    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double scale = 3;</code>
     */
    private $scale = 0.0;

    public function __construct() {
        \GPBMetadata\Google\Api\Distribution::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    public function getNumFiniteBuckets()
    {
        return $this->num_finite_buckets;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    public function setNumFiniteBuckets($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_finite_buckets = $var;
    }

    /**
     * <pre>
     * Must be greater than 1.
     * </pre>
     *
     * <code>double growth_factor = 2;</code>
     */
    public function getGrowthFactor()
    {
        return $this->growth_factor;
    }

    /**
     * <pre>
     * Must be greater than 1.
     * </pre>
     *
     * <code>double growth_factor = 2;</code>
     */
    public function setGrowthFactor($var)
    {
        GPBUtil::checkDouble($var);
        $this->growth_factor = $var;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double scale = 3;</code>
     */
    public function getScale()
    {
        return $this->scale;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double scale = 3;</code>
     */
    public function setScale($var)
    {
        GPBUtil::checkDouble($var);
        $this->scale = $var;
    }

}

