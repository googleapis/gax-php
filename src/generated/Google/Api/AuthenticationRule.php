<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/auth.proto

namespace Google\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Authentication rules for the service.
 * By default, if a method has any authentication requirements, every request
 * must include a valid credential matching one of the requirements.
 * It's an error to include more than one kind of credential in a single
 * request.
 * If a method doesn't have any auth requirements, request credentials will be
 * ignored.
 * </pre>
 *
 * Protobuf type <code>google.api.AuthenticationRule</code>
 */
class AuthenticationRule extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     */
    private $selector = '';
    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>.google.api.OAuthRequirements oauth = 2;</code>
     */
    private $oauth = null;
    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>bool allow_without_credential = 5;</code>
     */
    private $allow_without_credential = false;
    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    private $requirements;

    public function __construct() {
        \GPBMetadata\Google\Api\Auth::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     */
    public function getSelector()
    {
        return $this->selector;
    }

    /**
     * <pre>
     * Selects the methods to which this rule applies.
     * Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
     * </pre>
     *
     * <code>string selector = 1;</code>
     */
    public function setSelector($var)
    {
        GPBUtil::checkString($var, True);
        $this->selector = $var;
    }

    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>.google.api.OAuthRequirements oauth = 2;</code>
     */
    public function getOauth()
    {
        return $this->oauth;
    }

    /**
     * <pre>
     * The requirements for OAuth credentials.
     * </pre>
     *
     * <code>.google.api.OAuthRequirements oauth = 2;</code>
     */
    public function setOauth(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Api\OAuthRequirements::class);
        $this->oauth = $var;
    }

    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>bool allow_without_credential = 5;</code>
     */
    public function getAllowWithoutCredential()
    {
        return $this->allow_without_credential;
    }

    /**
     * <pre>
     * Whether to allow requests without a credential. The credential can be
     * an OAuth token, Google cookies (first-party auth) or EndUserCreds.
     * For requests without credentials, if the service control environment is
     * specified, each incoming request **must** be associated with a service
     * consumer. This can be done by passing an API key that belongs to a consumer
     * project.
     * </pre>
     *
     * <code>bool allow_without_credential = 5;</code>
     */
    public function setAllowWithoutCredential($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_without_credential = $var;
    }

    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public function getRequirements()
    {
        return $this->requirements;
    }

    /**
     * <pre>
     * Requirements for additional authentication providers.
     * </pre>
     *
     * <code>repeated .google.api.AuthRequirement requirements = 7;</code>
     */
    public function setRequirements(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Api\AuthRequirement::class);
        $this->requirements = $arr;
    }

}

