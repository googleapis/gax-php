<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/api/distribution.proto

namespace Google\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Specify a sequence of buckets that all have the same width (except
 * overflow and underflow).  Each bucket represents a constant absolute
 * uncertainty on the specific value in the bucket.
 * Defines `num_finite_buckets + 2` (= N) buckets with these boundaries for
 * bucket `i`:
 *    Upper bound (0 &lt;= i &lt; N-1):     offset + (width * i).
 *    Lower bound (1 &lt;= i &lt; N):       offset + (width * (i - 1)).
 * </pre>
 *
 * Protobuf type <code>google.api.Distribution.BucketOptions.Linear</code>
 */
class Distribution_BucketOptions_Linear extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    private $num_finite_buckets = 0;
    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double width = 2;</code>
     */
    private $width = 0.0;
    /**
     * <pre>
     * Lower bound of the first bucket.
     * </pre>
     *
     * <code>double offset = 3;</code>
     */
    private $offset = 0.0;

    public function __construct() {
        \GPBMetadata\Google\Api\Distribution::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    public function getNumFiniteBuckets()
    {
        return $this->num_finite_buckets;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 num_finite_buckets = 1;</code>
     */
    public function setNumFiniteBuckets($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_finite_buckets = $var;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double width = 2;</code>
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * <pre>
     * Must be greater than 0.
     * </pre>
     *
     * <code>double width = 2;</code>
     */
    public function setWidth($var)
    {
        GPBUtil::checkDouble($var);
        $this->width = $var;
    }

    /**
     * <pre>
     * Lower bound of the first bucket.
     * </pre>
     *
     * <code>double offset = 3;</code>
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * <pre>
     * Lower bound of the first bucket.
     * </pre>
     *
     * <code>double offset = 3;</code>
     */
    public function setOffset($var)
    {
        GPBUtil::checkDouble($var);
        $this->offset = $var;
    }

}

