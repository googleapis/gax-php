<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/api/monitoring.proto
//   Date: 2016-11-23 22:55:01

namespace google\api\Monitoring {

  class MonitoringDestination extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $monitored_resource = null;
    
    /**  @var string[]  */
    public $metrics = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.Monitoring.MonitoringDestination');

      // OPTIONAL STRING monitored_resource = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "monitored_resource";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING metrics = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "metrics";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <monitored_resource> has a value
     *
     * @return boolean
     */
    public function hasMonitoredResource(){
      return $this->_has(1);
    }
    
    /**
     * Clear <monitored_resource> value
     *
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function clearMonitoredResource(){
      return $this->_clear(1);
    }
    
    /**
     * Get <monitored_resource> value
     *
     * @return string
     */
    public function getMonitoredResource(){
      return $this->_get(1);
    }
    
    /**
     * Set <monitored_resource> value
     *
     * @param string $value
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function setMonitoredResource( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <metrics> has a value
     *
     * @return boolean
     */
    public function hasMetrics(){
      return $this->_has(2);
    }
    
    /**
     * Clear <metrics> value
     *
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function clearMetrics(){
      return $this->_clear(2);
    }
    
    /**
     * Get <metrics> value
     *
     * @param int $idx
     * @return string
     */
    public function getMetrics($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <metrics> value
     *
     * @param string $value
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function setMetrics( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <metrics>
     *
     * @return string[]
     */
    public function getMetricsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <metrics>
     *
     * @param string $value
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function addMetrics( $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\api {

  class Monitoring extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\Monitoring\MonitoringDestination[]  */
    public $producer_destinations = array();
    
    /**  @var \google\api\Monitoring\MonitoringDestination[]  */
    public $consumer_destinations = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.Monitoring');

      // REPEATED MESSAGE producer_destinations = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "producer_destinations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\Monitoring\MonitoringDestination';
      $descriptor->addField($f);

      // REPEATED MESSAGE consumer_destinations = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "consumer_destinations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\Monitoring\MonitoringDestination';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <producer_destinations> has a value
     *
     * @return boolean
     */
    public function hasProducerDestinations(){
      return $this->_has(1);
    }
    
    /**
     * Clear <producer_destinations> value
     *
     * @return \google\api\Monitoring
     */
    public function clearProducerDestinations(){
      return $this->_clear(1);
    }
    
    /**
     * Get <producer_destinations> value
     *
     * @param int $idx
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function getProducerDestinations($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <producer_destinations> value
     *
     * @param \google\api\Monitoring\MonitoringDestination $value
     * @return \google\api\Monitoring
     */
    public function setProducerDestinations(\google\api\Monitoring\MonitoringDestination $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <producer_destinations>
     *
     * @return \google\api\Monitoring\MonitoringDestination[]
     */
    public function getProducerDestinationsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <producer_destinations>
     *
     * @param \google\api\Monitoring\MonitoringDestination $value
     * @return \google\api\Monitoring
     */
    public function addProducerDestinations(\google\api\Monitoring\MonitoringDestination $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <consumer_destinations> has a value
     *
     * @return boolean
     */
    public function hasConsumerDestinations(){
      return $this->_has(2);
    }
    
    /**
     * Clear <consumer_destinations> value
     *
     * @return \google\api\Monitoring
     */
    public function clearConsumerDestinations(){
      return $this->_clear(2);
    }
    
    /**
     * Get <consumer_destinations> value
     *
     * @param int $idx
     * @return \google\api\Monitoring\MonitoringDestination
     */
    public function getConsumerDestinations($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <consumer_destinations> value
     *
     * @param \google\api\Monitoring\MonitoringDestination $value
     * @return \google\api\Monitoring
     */
    public function setConsumerDestinations(\google\api\Monitoring\MonitoringDestination $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <consumer_destinations>
     *
     * @return \google\api\Monitoring\MonitoringDestination[]
     */
    public function getConsumerDestinationsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <consumer_destinations>
     *
     * @param \google\api\Monitoring\MonitoringDestination $value
     * @return \google\api\Monitoring
     */
    public function addConsumerDestinations(\google\api\Monitoring\MonitoringDestination $value){
     return $this->_add(2, $value);
    }
  }
}

