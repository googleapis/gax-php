<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: google/api/service.proto
//   Date: 2016-11-23 22:55:03

namespace google\api {

  class Service extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\UInt32Value */
    public $config_version = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $title = null;
    
    /**  @var string */
    public $producer_project_id = null;
    
    /**  @var \google\protobuf\Api[]  */
    public $apis = array();
    
    /**  @var \google\protobuf\Type[]  */
    public $types = array();
    
    /**  @var \google\protobuf\Enum[]  */
    public $enums = array();
    
    /**  @var \google\api\Documentation */
    public $documentation = null;
    
    /**  @var \google\api\Backend */
    public $backend = null;
    
    /**  @var \google\api\Http */
    public $http = null;
    
    /**  @var \google\api\Authentication */
    public $authentication = null;
    
    /**  @var \google\api\Context */
    public $context = null;
    
    /**  @var \google\api\Usage */
    public $usage = null;
    
    /**  @var \google\api\Endpoint[]  */
    public $endpoints = array();
    
    /**  @var \google\api\Control */
    public $control = null;
    
    /**  @var \google\api\LogDescriptor[]  */
    public $logs = array();
    
    /**  @var \google\api\MetricDescriptor[]  */
    public $metrics = array();
    
    /**  @var \google\api\MonitoredResourceDescriptor[]  */
    public $monitored_resources = array();
    
    /**  @var \google\api\Logging */
    public $logging = null;
    
    /**  @var \google\api\Monitoring */
    public $monitoring = null;
    
    /**  @var \google\api\SystemParameters */
    public $system_parameters = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.Service');

      // OPTIONAL MESSAGE config_version = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "config_version";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\UInt32Value';
      $descriptor->addField($f);

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING id = 33
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 33;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING title = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING producer_project_id = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "producer_project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE apis = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "apis";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\Api';
      $descriptor->addField($f);

      // REPEATED MESSAGE types = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "types";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\Type';
      $descriptor->addField($f);

      // REPEATED MESSAGE enums = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "enums";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\protobuf\Enum';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE documentation = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "documentation";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Documentation';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE backend = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "backend";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Backend';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE http = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "http";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Http';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE authentication = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "authentication";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Authentication';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE context = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "context";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Context';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE usage = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "usage";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Usage';
      $descriptor->addField($f);

      // REPEATED MESSAGE endpoints = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "endpoints";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\Endpoint';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE control = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "control";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Control';
      $descriptor->addField($f);

      // REPEATED MESSAGE logs = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "logs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\LogDescriptor';
      $descriptor->addField($f);

      // REPEATED MESSAGE metrics = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "metrics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\MetricDescriptor';
      $descriptor->addField($f);

      // REPEATED MESSAGE monitored_resources = 25
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 25;
      $f->name      = "monitored_resources";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\MonitoredResourceDescriptor';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "logging";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Logging';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE monitoring = 28
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 28;
      $f->name      = "monitoring";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Monitoring';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE system_parameters = 29
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 29;
      $f->name      = "system_parameters";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\SystemParameters';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <config_version> has a value
     *
     * @return boolean
     */
    public function hasConfigVersion(){
      return $this->_has(20);
    }
    
    /**
     * Clear <config_version> value
     *
     * @return \google\api\Service
     */
    public function clearConfigVersion(){
      return $this->_clear(20);
    }
    
    /**
     * Get <config_version> value
     *
     * @return \google\protobuf\UInt32Value
     */
    public function getConfigVersion(){
      return $this->_get(20);
    }
    
    /**
     * Set <config_version> value
     *
     * @param \google\protobuf\UInt32Value $value
     * @return \google\api\Service
     */
    public function setConfigVersion(\google\protobuf\UInt32Value $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\api\Service
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\api\Service
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(33);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\api\Service
     */
    public function clearId(){
      return $this->_clear(33);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(33);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\api\Service
     */
    public function setId( $value){
      return $this->_set(33, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(2);
    }
    
    /**
     * Clear <title> value
     *
     * @return \google\api\Service
     */
    public function clearTitle(){
      return $this->_clear(2);
    }
    
    /**
     * Get <title> value
     *
     * @return string
     */
    public function getTitle(){
      return $this->_get(2);
    }
    
    /**
     * Set <title> value
     *
     * @param string $value
     * @return \google\api\Service
     */
    public function setTitle( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <producer_project_id> has a value
     *
     * @return boolean
     */
    public function hasProducerProjectId(){
      return $this->_has(22);
    }
    
    /**
     * Clear <producer_project_id> value
     *
     * @return \google\api\Service
     */
    public function clearProducerProjectId(){
      return $this->_clear(22);
    }
    
    /**
     * Get <producer_project_id> value
     *
     * @return string
     */
    public function getProducerProjectId(){
      return $this->_get(22);
    }
    
    /**
     * Set <producer_project_id> value
     *
     * @param string $value
     * @return \google\api\Service
     */
    public function setProducerProjectId( $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <apis> has a value
     *
     * @return boolean
     */
    public function hasApis(){
      return $this->_has(3);
    }
    
    /**
     * Clear <apis> value
     *
     * @return \google\api\Service
     */
    public function clearApis(){
      return $this->_clear(3);
    }
    
    /**
     * Get <apis> value
     *
     * @param int $idx
     * @return \google\protobuf\Api
     */
    public function getApis($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <apis> value
     *
     * @param \google\protobuf\Api $value
     * @return \google\api\Service
     */
    public function setApis(\google\protobuf\Api $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <apis>
     *
     * @return \google\protobuf\Api[]
     */
    public function getApisList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <apis>
     *
     * @param \google\protobuf\Api $value
     * @return \google\api\Service
     */
    public function addApis(\google\protobuf\Api $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <types> has a value
     *
     * @return boolean
     */
    public function hasTypes(){
      return $this->_has(4);
    }
    
    /**
     * Clear <types> value
     *
     * @return \google\api\Service
     */
    public function clearTypes(){
      return $this->_clear(4);
    }
    
    /**
     * Get <types> value
     *
     * @param int $idx
     * @return \google\protobuf\Type
     */
    public function getTypes($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <types> value
     *
     * @param \google\protobuf\Type $value
     * @return \google\api\Service
     */
    public function setTypes(\google\protobuf\Type $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <types>
     *
     * @return \google\protobuf\Type[]
     */
    public function getTypesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <types>
     *
     * @param \google\protobuf\Type $value
     * @return \google\api\Service
     */
    public function addTypes(\google\protobuf\Type $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <enums> has a value
     *
     * @return boolean
     */
    public function hasEnums(){
      return $this->_has(5);
    }
    
    /**
     * Clear <enums> value
     *
     * @return \google\api\Service
     */
    public function clearEnums(){
      return $this->_clear(5);
    }
    
    /**
     * Get <enums> value
     *
     * @param int $idx
     * @return \google\protobuf\Enum
     */
    public function getEnums($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <enums> value
     *
     * @param \google\protobuf\Enum $value
     * @return \google\api\Service
     */
    public function setEnums(\google\protobuf\Enum $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <enums>
     *
     * @return \google\protobuf\Enum[]
     */
    public function getEnumsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <enums>
     *
     * @param \google\protobuf\Enum $value
     * @return \google\api\Service
     */
    public function addEnums(\google\protobuf\Enum $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <documentation> has a value
     *
     * @return boolean
     */
    public function hasDocumentation(){
      return $this->_has(6);
    }
    
    /**
     * Clear <documentation> value
     *
     * @return \google\api\Service
     */
    public function clearDocumentation(){
      return $this->_clear(6);
    }
    
    /**
     * Get <documentation> value
     *
     * @return \google\api\Documentation
     */
    public function getDocumentation(){
      return $this->_get(6);
    }
    
    /**
     * Set <documentation> value
     *
     * @param \google\api\Documentation $value
     * @return \google\api\Service
     */
    public function setDocumentation(\google\api\Documentation $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <backend> has a value
     *
     * @return boolean
     */
    public function hasBackend(){
      return $this->_has(8);
    }
    
    /**
     * Clear <backend> value
     *
     * @return \google\api\Service
     */
    public function clearBackend(){
      return $this->_clear(8);
    }
    
    /**
     * Get <backend> value
     *
     * @return \google\api\Backend
     */
    public function getBackend(){
      return $this->_get(8);
    }
    
    /**
     * Set <backend> value
     *
     * @param \google\api\Backend $value
     * @return \google\api\Service
     */
    public function setBackend(\google\api\Backend $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <http> has a value
     *
     * @return boolean
     */
    public function hasHttp(){
      return $this->_has(9);
    }
    
    /**
     * Clear <http> value
     *
     * @return \google\api\Service
     */
    public function clearHttp(){
      return $this->_clear(9);
    }
    
    /**
     * Get <http> value
     *
     * @return \google\api\Http
     */
    public function getHttp(){
      return $this->_get(9);
    }
    
    /**
     * Set <http> value
     *
     * @param \google\api\Http $value
     * @return \google\api\Service
     */
    public function setHttp(\google\api\Http $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <authentication> has a value
     *
     * @return boolean
     */
    public function hasAuthentication(){
      return $this->_has(11);
    }
    
    /**
     * Clear <authentication> value
     *
     * @return \google\api\Service
     */
    public function clearAuthentication(){
      return $this->_clear(11);
    }
    
    /**
     * Get <authentication> value
     *
     * @return \google\api\Authentication
     */
    public function getAuthentication(){
      return $this->_get(11);
    }
    
    /**
     * Set <authentication> value
     *
     * @param \google\api\Authentication $value
     * @return \google\api\Service
     */
    public function setAuthentication(\google\api\Authentication $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <context> has a value
     *
     * @return boolean
     */
    public function hasContext(){
      return $this->_has(12);
    }
    
    /**
     * Clear <context> value
     *
     * @return \google\api\Service
     */
    public function clearContext(){
      return $this->_clear(12);
    }
    
    /**
     * Get <context> value
     *
     * @return \google\api\Context
     */
    public function getContext(){
      return $this->_get(12);
    }
    
    /**
     * Set <context> value
     *
     * @param \google\api\Context $value
     * @return \google\api\Service
     */
    public function setContext(\google\api\Context $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <usage> has a value
     *
     * @return boolean
     */
    public function hasUsage(){
      return $this->_has(15);
    }
    
    /**
     * Clear <usage> value
     *
     * @return \google\api\Service
     */
    public function clearUsage(){
      return $this->_clear(15);
    }
    
    /**
     * Get <usage> value
     *
     * @return \google\api\Usage
     */
    public function getUsage(){
      return $this->_get(15);
    }
    
    /**
     * Set <usage> value
     *
     * @param \google\api\Usage $value
     * @return \google\api\Service
     */
    public function setUsage(\google\api\Usage $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <endpoints> has a value
     *
     * @return boolean
     */
    public function hasEndpoints(){
      return $this->_has(18);
    }
    
    /**
     * Clear <endpoints> value
     *
     * @return \google\api\Service
     */
    public function clearEndpoints(){
      return $this->_clear(18);
    }
    
    /**
     * Get <endpoints> value
     *
     * @param int $idx
     * @return \google\api\Endpoint
     */
    public function getEndpoints($idx = NULL){
      return $this->_get(18, $idx);
    }
    
    /**
     * Set <endpoints> value
     *
     * @param \google\api\Endpoint $value
     * @return \google\api\Service
     */
    public function setEndpoints(\google\api\Endpoint $value, $idx = NULL){
      return $this->_set(18, $value, $idx);
    }
    
    /**
     * Get all elements of <endpoints>
     *
     * @return \google\api\Endpoint[]
     */
    public function getEndpointsList(){
     return $this->_get(18);
    }
    
    /**
     * Add a new element to <endpoints>
     *
     * @param \google\api\Endpoint $value
     * @return \google\api\Service
     */
    public function addEndpoints(\google\api\Endpoint $value){
     return $this->_add(18, $value);
    }
    
    /**
     * Check if <control> has a value
     *
     * @return boolean
     */
    public function hasControl(){
      return $this->_has(21);
    }
    
    /**
     * Clear <control> value
     *
     * @return \google\api\Service
     */
    public function clearControl(){
      return $this->_clear(21);
    }
    
    /**
     * Get <control> value
     *
     * @return \google\api\Control
     */
    public function getControl(){
      return $this->_get(21);
    }
    
    /**
     * Set <control> value
     *
     * @param \google\api\Control $value
     * @return \google\api\Service
     */
    public function setControl(\google\api\Control $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <logs> has a value
     *
     * @return boolean
     */
    public function hasLogs(){
      return $this->_has(23);
    }
    
    /**
     * Clear <logs> value
     *
     * @return \google\api\Service
     */
    public function clearLogs(){
      return $this->_clear(23);
    }
    
    /**
     * Get <logs> value
     *
     * @param int $idx
     * @return \google\api\LogDescriptor
     */
    public function getLogs($idx = NULL){
      return $this->_get(23, $idx);
    }
    
    /**
     * Set <logs> value
     *
     * @param \google\api\LogDescriptor $value
     * @return \google\api\Service
     */
    public function setLogs(\google\api\LogDescriptor $value, $idx = NULL){
      return $this->_set(23, $value, $idx);
    }
    
    /**
     * Get all elements of <logs>
     *
     * @return \google\api\LogDescriptor[]
     */
    public function getLogsList(){
     return $this->_get(23);
    }
    
    /**
     * Add a new element to <logs>
     *
     * @param \google\api\LogDescriptor $value
     * @return \google\api\Service
     */
    public function addLogs(\google\api\LogDescriptor $value){
     return $this->_add(23, $value);
    }
    
    /**
     * Check if <metrics> has a value
     *
     * @return boolean
     */
    public function hasMetrics(){
      return $this->_has(24);
    }
    
    /**
     * Clear <metrics> value
     *
     * @return \google\api\Service
     */
    public function clearMetrics(){
      return $this->_clear(24);
    }
    
    /**
     * Get <metrics> value
     *
     * @param int $idx
     * @return \google\api\MetricDescriptor
     */
    public function getMetrics($idx = NULL){
      return $this->_get(24, $idx);
    }
    
    /**
     * Set <metrics> value
     *
     * @param \google\api\MetricDescriptor $value
     * @return \google\api\Service
     */
    public function setMetrics(\google\api\MetricDescriptor $value, $idx = NULL){
      return $this->_set(24, $value, $idx);
    }
    
    /**
     * Get all elements of <metrics>
     *
     * @return \google\api\MetricDescriptor[]
     */
    public function getMetricsList(){
     return $this->_get(24);
    }
    
    /**
     * Add a new element to <metrics>
     *
     * @param \google\api\MetricDescriptor $value
     * @return \google\api\Service
     */
    public function addMetrics(\google\api\MetricDescriptor $value){
     return $this->_add(24, $value);
    }
    
    /**
     * Check if <monitored_resources> has a value
     *
     * @return boolean
     */
    public function hasMonitoredResources(){
      return $this->_has(25);
    }
    
    /**
     * Clear <monitored_resources> value
     *
     * @return \google\api\Service
     */
    public function clearMonitoredResources(){
      return $this->_clear(25);
    }
    
    /**
     * Get <monitored_resources> value
     *
     * @param int $idx
     * @return \google\api\MonitoredResourceDescriptor
     */
    public function getMonitoredResources($idx = NULL){
      return $this->_get(25, $idx);
    }
    
    /**
     * Set <monitored_resources> value
     *
     * @param \google\api\MonitoredResourceDescriptor $value
     * @return \google\api\Service
     */
    public function setMonitoredResources(\google\api\MonitoredResourceDescriptor $value, $idx = NULL){
      return $this->_set(25, $value, $idx);
    }
    
    /**
     * Get all elements of <monitored_resources>
     *
     * @return \google\api\MonitoredResourceDescriptor[]
     */
    public function getMonitoredResourcesList(){
     return $this->_get(25);
    }
    
    /**
     * Add a new element to <monitored_resources>
     *
     * @param \google\api\MonitoredResourceDescriptor $value
     * @return \google\api\Service
     */
    public function addMonitoredResources(\google\api\MonitoredResourceDescriptor $value){
     return $this->_add(25, $value);
    }
    
    /**
     * Check if <logging> has a value
     *
     * @return boolean
     */
    public function hasLogging(){
      return $this->_has(27);
    }
    
    /**
     * Clear <logging> value
     *
     * @return \google\api\Service
     */
    public function clearLogging(){
      return $this->_clear(27);
    }
    
    /**
     * Get <logging> value
     *
     * @return \google\api\Logging
     */
    public function getLogging(){
      return $this->_get(27);
    }
    
    /**
     * Set <logging> value
     *
     * @param \google\api\Logging $value
     * @return \google\api\Service
     */
    public function setLogging(\google\api\Logging $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <monitoring> has a value
     *
     * @return boolean
     */
    public function hasMonitoring(){
      return $this->_has(28);
    }
    
    /**
     * Clear <monitoring> value
     *
     * @return \google\api\Service
     */
    public function clearMonitoring(){
      return $this->_clear(28);
    }
    
    /**
     * Get <monitoring> value
     *
     * @return \google\api\Monitoring
     */
    public function getMonitoring(){
      return $this->_get(28);
    }
    
    /**
     * Set <monitoring> value
     *
     * @param \google\api\Monitoring $value
     * @return \google\api\Service
     */
    public function setMonitoring(\google\api\Monitoring $value){
      return $this->_set(28, $value);
    }
    
    /**
     * Check if <system_parameters> has a value
     *
     * @return boolean
     */
    public function hasSystemParameters(){
      return $this->_has(29);
    }
    
    /**
     * Clear <system_parameters> value
     *
     * @return \google\api\Service
     */
    public function clearSystemParameters(){
      return $this->_clear(29);
    }
    
    /**
     * Get <system_parameters> value
     *
     * @return \google\api\SystemParameters
     */
    public function getSystemParameters(){
      return $this->_get(29);
    }
    
    /**
     * Set <system_parameters> value
     *
     * @param \google\api\SystemParameters $value
     * @return \google\api\Service
     */
    public function setSystemParameters(\google\api\SystemParameters $value){
      return $this->_set(29, $value);
    }
  }
}

