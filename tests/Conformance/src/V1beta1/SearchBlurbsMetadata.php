<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/messaging.proto

namespace Google\Showcase\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The operation metadata message for the
 * google.showcase.v1beta1.Messaging\SearchBlurbs method.
 *
 * Generated from protobuf message <code>google.showcase.v1beta1.SearchBlurbsMetadata</code>
 */
class SearchBlurbsMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * This signals to the client when to next poll for response.
     *
     * Generated from protobuf field <code>.google.rpc.RetryInfo retry_info = 1;</code>
     */
    protected $retry_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Rpc\RetryInfo $retry_info
     *           This signals to the client when to next poll for response.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\Messaging::initOnce();
        parent::__construct($data);
    }

    /**
     * This signals to the client when to next poll for response.
     *
     * Generated from protobuf field <code>.google.rpc.RetryInfo retry_info = 1;</code>
     * @return \Google\Rpc\RetryInfo|null
     */
    public function getRetryInfo()
    {
        return $this->retry_info;
    }

    public function hasRetryInfo()
    {
        return isset($this->retry_info);
    }

    public function clearRetryInfo()
    {
        unset($this->retry_info);
    }

    /**
     * This signals to the client when to next poll for response.
     *
     * Generated from protobuf field <code>.google.rpc.RetryInfo retry_info = 1;</code>
     * @param \Google\Rpc\RetryInfo $var
     * @return $this
     */
    public function setRetryInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\RetryInfo::class);
        $this->retry_info = $var;

        return $this;
    }

}

