<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/echo.proto

namespace Google\Showcase\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request for Block method.
 *
 * Generated from protobuf message <code>google.showcase.v1beta1.BlockRequest</code>
 */
class BlockRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The amount of time to block before returning a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration response_delay = 1;</code>
     */
    protected $response_delay = null;
    protected $response;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $response_delay
     *           The amount of time to block before returning a response.
     *     @type \Google\Rpc\Status $error
     *           The error that will be returned by the server. If this code is specified
     *           to be the OK rpc code, an empty response will be returned.
     *     @type \Google\Showcase\V1beta1\BlockResponse $success
     *           The response to be returned that will signify successful method call.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\PBEcho::initOnce();
        parent::__construct($data);
    }

    /**
     * The amount of time to block before returning a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration response_delay = 1;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getResponseDelay()
    {
        return $this->response_delay;
    }

    public function hasResponseDelay()
    {
        return isset($this->response_delay);
    }

    public function clearResponseDelay()
    {
        unset($this->response_delay);
    }

    /**
     * The amount of time to block before returning a response.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration response_delay = 1;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setResponseDelay($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->response_delay = $var;

        return $this;
    }

    /**
     * The error that will be returned by the server. If this code is specified
     * to be the OK rpc code, an empty response will be returned.
     *
     * Generated from protobuf field <code>.google.rpc.Status error = 2;</code>
     * @return \Google\Rpc\Status|null
     */
    public function getError()
    {
        return $this->readOneof(2);
    }

    public function hasError()
    {
        return $this->hasOneof(2);
    }

    /**
     * The error that will be returned by the server. If this code is specified
     * to be the OK rpc code, an empty response will be returned.
     *
     * Generated from protobuf field <code>.google.rpc.Status error = 2;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The response to be returned that will signify successful method call.
     *
     * Generated from protobuf field <code>.google.showcase.v1beta1.BlockResponse success = 3;</code>
     * @return \Google\Showcase\V1beta1\BlockResponse|null
     */
    public function getSuccess()
    {
        return $this->readOneof(3);
    }

    public function hasSuccess()
    {
        return $this->hasOneof(3);
    }

    /**
     * The response to be returned that will signify successful method call.
     *
     * Generated from protobuf field <code>.google.showcase.v1beta1.BlockResponse success = 3;</code>
     * @param \Google\Showcase\V1beta1\BlockResponse $var
     * @return $this
     */
    public function setSuccess($var)
    {
        GPBUtil::checkMessage($var, \Google\Showcase\V1beta1\BlockResponse::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResponse()
    {
        return $this->whichOneof("response");
    }

}

