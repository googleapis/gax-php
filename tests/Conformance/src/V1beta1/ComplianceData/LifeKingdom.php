<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/compliance.proto

namespace Google\Showcase\V1beta1\ComplianceData;

use UnexpectedValueException;

/**
 * Protobuf type <code>google.showcase.v1beta1.ComplianceData.LifeKingdom</code>
 */
class LifeKingdom
{
    /**
     * Generated from protobuf enum <code>LIFE_KINGDOM_UNSPECIFIED = 0;</code>
     */
    const LIFE_KINGDOM_UNSPECIFIED = 0;
    /**
     * Generated from protobuf enum <code>ARCHAEBACTERIA = 1;</code>
     */
    const ARCHAEBACTERIA = 1;
    /**
     * Generated from protobuf enum <code>EUBACTERIA = 2;</code>
     */
    const EUBACTERIA = 2;
    /**
     * Generated from protobuf enum <code>PROTISTA = 3;</code>
     */
    const PROTISTA = 3;
    /**
     * Generated from protobuf enum <code>FUNGI = 4;</code>
     */
    const FUNGI = 4;
    /**
     * Generated from protobuf enum <code>PLANTAE = 5;</code>
     */
    const PLANTAE = 5;
    /**
     * Generated from protobuf enum <code>ANIMALIA = 6;</code>
     */
    const ANIMALIA = 6;

    private static $valueToName = [
        self::LIFE_KINGDOM_UNSPECIFIED => 'LIFE_KINGDOM_UNSPECIFIED',
        self::ARCHAEBACTERIA => 'ARCHAEBACTERIA',
        self::EUBACTERIA => 'EUBACTERIA',
        self::PROTISTA => 'PROTISTA',
        self::FUNGI => 'FUNGI',
        self::PLANTAE => 'PLANTAE',
        self::ANIMALIA => 'ANIMALIA',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(LifeKingdom::class, \Google\Showcase\V1beta1\ComplianceData_LifeKingdom::class);

