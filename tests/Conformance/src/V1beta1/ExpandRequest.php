<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/echo.proto

namespace Google\Showcase\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for the Expand method.
 *
 * Generated from protobuf message <code>google.showcase.v1beta1.ExpandRequest</code>
 */
class ExpandRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The content that will be split into words and returned on the stream.
     *
     * Generated from protobuf field <code>string content = 1;</code>
     */
    protected $content = '';
    /**
     * The error that is thrown after all words are sent on the stream.
     *
     * Generated from protobuf field <code>.google.rpc.Status error = 2;</code>
     */
    protected $error = null;
    /**
     *The wait time between each server streaming messages
     *
     * Generated from protobuf field <code>.google.protobuf.Duration stream_wait_time = 3;</code>
     */
    protected $stream_wait_time = null;

    /**
     * @param string             $content The content that will be split into words and returned on the stream.
     * @param \Google\Rpc\Status $error   The error that is thrown after all words are sent on the stream.
     *
     * @return \Google\Showcase\V1beta1\ExpandRequest
     *
     * @experimental
     */
    public static function build(string $content, \Google\Rpc\Status $error): self
    {
        return (new self())
            ->setContent($content)
            ->setError($error);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $content
     *           The content that will be split into words and returned on the stream.
     *     @type \Google\Rpc\Status $error
     *           The error that is thrown after all words are sent on the stream.
     *     @type \Google\Protobuf\Duration $stream_wait_time
     *          The wait time between each server streaming messages
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\PBEcho::initOnce();
        parent::__construct($data);
    }

    /**
     * The content that will be split into words and returned on the stream.
     *
     * Generated from protobuf field <code>string content = 1;</code>
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * The content that will be split into words and returned on the stream.
     *
     * Generated from protobuf field <code>string content = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setContent($var)
    {
        GPBUtil::checkString($var, True);
        $this->content = $var;

        return $this;
    }

    /**
     * The error that is thrown after all words are sent on the stream.
     *
     * Generated from protobuf field <code>.google.rpc.Status error = 2;</code>
     * @return \Google\Rpc\Status|null
     */
    public function getError()
    {
        return $this->error;
    }

    public function hasError()
    {
        return isset($this->error);
    }

    public function clearError()
    {
        unset($this->error);
    }

    /**
     * The error that is thrown after all words are sent on the stream.
     *
     * Generated from protobuf field <code>.google.rpc.Status error = 2;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->error = $var;

        return $this;
    }

    /**
     *The wait time between each server streaming messages
     *
     * Generated from protobuf field <code>.google.protobuf.Duration stream_wait_time = 3;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getStreamWaitTime()
    {
        return $this->stream_wait_time;
    }

    public function hasStreamWaitTime()
    {
        return isset($this->stream_wait_time);
    }

    public function clearStreamWaitTime()
    {
        unset($this->stream_wait_time);
    }

    /**
     *The wait time between each server streaming messages
     *
     * Generated from protobuf field <code>.google.protobuf.Duration stream_wait_time = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setStreamWaitTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->stream_wait_time = $var;

        return $this;
    }

}

