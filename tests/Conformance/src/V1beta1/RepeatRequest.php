<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/compliance.proto

namespace Google\Showcase\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.showcase.v1beta1.RepeatRequest</code>
 */
class RepeatRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>.google.showcase.v1beta1.ComplianceData info = 2;</code>
     */
    protected $info = null;
    /**
     * If true, the server will verify that the received request matches
     * the request with the same name in the compliance test suite.
     *
     * Generated from protobuf field <code>bool server_verify = 3;</code>
     */
    protected $server_verify = false;
    /**
     * The URI template this request is expected to be bound to server-side.
     *
     * Generated from protobuf field <code>optional string intended_binding_uri = 10;</code>
     */
    protected $intended_binding_uri = null;
    /**
     * Some top level fields, to test that these are encoded correctly
     * in query params.
     *
     * Generated from protobuf field <code>int32 f_int32 = 4;</code>
     */
    protected $f_int32 = 0;
    /**
     * Generated from protobuf field <code>int64 f_int64 = 5;</code>
     */
    protected $f_int64 = 0;
    /**
     * Generated from protobuf field <code>double f_double = 6;</code>
     */
    protected $f_double = 0.0;
    /**
     * Generated from protobuf field <code>optional int32 p_int32 = 7;</code>
     */
    protected $p_int32 = null;
    /**
     * Generated from protobuf field <code>optional int64 p_int64 = 8;</code>
     */
    protected $p_int64 = null;
    /**
     * Generated from protobuf field <code>optional double p_double = 9;</code>
     */
    protected $p_double = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type \Google\Showcase\V1beta1\ComplianceData $info
     *     @type bool $server_verify
     *           If true, the server will verify that the received request matches
     *           the request with the same name in the compliance test suite.
     *     @type string $intended_binding_uri
     *           The URI template this request is expected to be bound to server-side.
     *     @type int $f_int32
     *           Some top level fields, to test that these are encoded correctly
     *           in query params.
     *     @type int|string $f_int64
     *     @type float $f_double
     *     @type int $p_int32
     *     @type int|string $p_int64
     *     @type float $p_double
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\Compliance::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.showcase.v1beta1.ComplianceData info = 2;</code>
     * @return \Google\Showcase\V1beta1\ComplianceData|null
     */
    public function getInfo()
    {
        return $this->info;
    }

    public function hasInfo()
    {
        return isset($this->info);
    }

    public function clearInfo()
    {
        unset($this->info);
    }

    /**
     * Generated from protobuf field <code>.google.showcase.v1beta1.ComplianceData info = 2;</code>
     * @param \Google\Showcase\V1beta1\ComplianceData $var
     * @return $this
     */
    public function setInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Showcase\V1beta1\ComplianceData::class);
        $this->info = $var;

        return $this;
    }

    /**
     * If true, the server will verify that the received request matches
     * the request with the same name in the compliance test suite.
     *
     * Generated from protobuf field <code>bool server_verify = 3;</code>
     * @return bool
     */
    public function getServerVerify()
    {
        return $this->server_verify;
    }

    /**
     * If true, the server will verify that the received request matches
     * the request with the same name in the compliance test suite.
     *
     * Generated from protobuf field <code>bool server_verify = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setServerVerify($var)
    {
        GPBUtil::checkBool($var);
        $this->server_verify = $var;

        return $this;
    }

    /**
     * The URI template this request is expected to be bound to server-side.
     *
     * Generated from protobuf field <code>optional string intended_binding_uri = 10;</code>
     * @return string
     */
    public function getIntendedBindingUri()
    {
        return isset($this->intended_binding_uri) ? $this->intended_binding_uri : '';
    }

    public function hasIntendedBindingUri()
    {
        return isset($this->intended_binding_uri);
    }

    public function clearIntendedBindingUri()
    {
        unset($this->intended_binding_uri);
    }

    /**
     * The URI template this request is expected to be bound to server-side.
     *
     * Generated from protobuf field <code>optional string intended_binding_uri = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setIntendedBindingUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->intended_binding_uri = $var;

        return $this;
    }

    /**
     * Some top level fields, to test that these are encoded correctly
     * in query params.
     *
     * Generated from protobuf field <code>int32 f_int32 = 4;</code>
     * @return int
     */
    public function getFInt32()
    {
        return $this->f_int32;
    }

    /**
     * Some top level fields, to test that these are encoded correctly
     * in query params.
     *
     * Generated from protobuf field <code>int32 f_int32 = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setFInt32($var)
    {
        GPBUtil::checkInt32($var);
        $this->f_int32 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 f_int64 = 5;</code>
     * @return int|string
     */
    public function getFInt64()
    {
        return $this->f_int64;
    }

    /**
     * Generated from protobuf field <code>int64 f_int64 = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFInt64($var)
    {
        GPBUtil::checkInt64($var);
        $this->f_int64 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double f_double = 6;</code>
     * @return float
     */
    public function getFDouble()
    {
        return $this->f_double;
    }

    /**
     * Generated from protobuf field <code>double f_double = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setFDouble($var)
    {
        GPBUtil::checkDouble($var);
        $this->f_double = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 p_int32 = 7;</code>
     * @return int
     */
    public function getPInt32()
    {
        return isset($this->p_int32) ? $this->p_int32 : 0;
    }

    public function hasPInt32()
    {
        return isset($this->p_int32);
    }

    public function clearPInt32()
    {
        unset($this->p_int32);
    }

    /**
     * Generated from protobuf field <code>optional int32 p_int32 = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setPInt32($var)
    {
        GPBUtil::checkInt32($var);
        $this->p_int32 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 p_int64 = 8;</code>
     * @return int|string
     */
    public function getPInt64()
    {
        return isset($this->p_int64) ? $this->p_int64 : 0;
    }

    public function hasPInt64()
    {
        return isset($this->p_int64);
    }

    public function clearPInt64()
    {
        unset($this->p_int64);
    }

    /**
     * Generated from protobuf field <code>optional int64 p_int64 = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPInt64($var)
    {
        GPBUtil::checkInt64($var);
        $this->p_int64 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double p_double = 9;</code>
     * @return float
     */
    public function getPDouble()
    {
        return isset($this->p_double) ? $this->p_double : 0.0;
    }

    public function hasPDouble()
    {
        return isset($this->p_double);
    }

    public function clearPDouble()
    {
        unset($this->p_double);
    }

    /**
     * Generated from protobuf field <code>optional double p_double = 9;</code>
     * @param float $var
     * @return $this
     */
    public function setPDouble($var)
    {
        GPBUtil::checkDouble($var);
        $this->p_double = $var;

        return $this;
    }

}

