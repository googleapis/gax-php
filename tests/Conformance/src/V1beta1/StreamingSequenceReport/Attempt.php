<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/sequence.proto

namespace Google\Showcase\V1beta1\StreamingSequenceReport;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Contains metrics on individual RPC Attempts in a sequence.
 *
 * Generated from protobuf message <code>google.showcase.v1beta1.StreamingSequenceReport.Attempt</code>
 */
class Attempt extends \Google\Protobuf\Internal\Message
{
    /**
     * The attempt number - starting at 0.
     *
     * Generated from protobuf field <code>int32 attempt_number = 1;</code>
     */
    protected $attempt_number = 0;
    /**
     * The deadline dictated by the attempt to the server.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp attempt_deadline = 2;</code>
     */
    protected $attempt_deadline = null;
    /**
     * The time that the server responded to the RPC attempt. Used for
     * calculating attempt_delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp response_time = 3;</code>
     */
    protected $response_time = null;
    /**
     * The server perceived delay between sending the last response and
     * receiving this attempt. Used for validating attempt delay backoff.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration attempt_delay = 4;</code>
     */
    protected $attempt_delay = null;
    /**
     * The status returned to the attempt.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 5;</code>
     */
    protected $status = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $attempt_number
     *           The attempt number - starting at 0.
     *     @type \Google\Protobuf\Timestamp $attempt_deadline
     *           The deadline dictated by the attempt to the server.
     *     @type \Google\Protobuf\Timestamp $response_time
     *           The time that the server responded to the RPC attempt. Used for
     *           calculating attempt_delay.
     *     @type \Google\Protobuf\Duration $attempt_delay
     *           The server perceived delay between sending the last response and
     *           receiving this attempt. Used for validating attempt delay backoff.
     *     @type \Google\Rpc\Status $status
     *           The status returned to the attempt.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\Sequence::initOnce();
        parent::__construct($data);
    }

    /**
     * The attempt number - starting at 0.
     *
     * Generated from protobuf field <code>int32 attempt_number = 1;</code>
     * @return int
     */
    public function getAttemptNumber()
    {
        return $this->attempt_number;
    }

    /**
     * The attempt number - starting at 0.
     *
     * Generated from protobuf field <code>int32 attempt_number = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setAttemptNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->attempt_number = $var;

        return $this;
    }

    /**
     * The deadline dictated by the attempt to the server.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp attempt_deadline = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getAttemptDeadline()
    {
        return $this->attempt_deadline;
    }

    public function hasAttemptDeadline()
    {
        return isset($this->attempt_deadline);
    }

    public function clearAttemptDeadline()
    {
        unset($this->attempt_deadline);
    }

    /**
     * The deadline dictated by the attempt to the server.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp attempt_deadline = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setAttemptDeadline($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->attempt_deadline = $var;

        return $this;
    }

    /**
     * The time that the server responded to the RPC attempt. Used for
     * calculating attempt_delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp response_time = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getResponseTime()
    {
        return $this->response_time;
    }

    public function hasResponseTime()
    {
        return isset($this->response_time);
    }

    public function clearResponseTime()
    {
        unset($this->response_time);
    }

    /**
     * The time that the server responded to the RPC attempt. Used for
     * calculating attempt_delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp response_time = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setResponseTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->response_time = $var;

        return $this;
    }

    /**
     * The server perceived delay between sending the last response and
     * receiving this attempt. Used for validating attempt delay backoff.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration attempt_delay = 4;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getAttemptDelay()
    {
        return $this->attempt_delay;
    }

    public function hasAttemptDelay()
    {
        return isset($this->attempt_delay);
    }

    public function clearAttemptDelay()
    {
        unset($this->attempt_delay);
    }

    /**
     * The server perceived delay between sending the last response and
     * receiving this attempt. Used for validating attempt delay backoff.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration attempt_delay = 4;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setAttemptDelay($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->attempt_delay = $var;

        return $this;
    }

    /**
     * The status returned to the attempt.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 5;</code>
     * @return \Google\Rpc\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * The status returned to the attempt.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 5;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->status = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Attempt::class, \Google\Showcase\V1beta1\StreamingSequenceReport_Attempt::class);

