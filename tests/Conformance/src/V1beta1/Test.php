<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/showcase/v1beta1/testing.proto

namespace Google\Showcase\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.showcase.v1beta1.Test</code>
 */
class Test extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the test.
     * The tests/&#42; portion of the names are hard-coded, and do not change
     * from session to session.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The expectation level for this test.
     *
     * Generated from protobuf field <code>.google.showcase.v1beta1.Test.ExpectationLevel expectation_level = 2;</code>
     */
    protected $expectation_level = 0;
    /**
     * A description of the test.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * The blueprints that will satisfy this test. There may be multiple blueprints
     * that can signal to the server that this test case is being exercised. Although
     * multiple blueprints are specified, only a single blueprint needs to be run to
     * signal that the test case was exercised.
     *
     * Generated from protobuf field <code>repeated .google.showcase.v1beta1.Test.Blueprint blueprints = 4;</code>
     */
    private $blueprints;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The name of the test.
     *           The tests/&#42; portion of the names are hard-coded, and do not change
     *           from session to session.
     *     @type int $expectation_level
     *           The expectation level for this test.
     *     @type string $description
     *           A description of the test.
     *     @type array<\Google\Showcase\V1beta1\Test\Blueprint>|\Google\Protobuf\Internal\RepeatedField $blueprints
     *           The blueprints that will satisfy this test. There may be multiple blueprints
     *           that can signal to the server that this test case is being exercised. Although
     *           multiple blueprints are specified, only a single blueprint needs to be run to
     *           signal that the test case was exercised.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Showcase\V1Beta1\Testing::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the test.
     * The tests/&#42; portion of the names are hard-coded, and do not change
     * from session to session.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the test.
     * The tests/&#42; portion of the names are hard-coded, and do not change
     * from session to session.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The expectation level for this test.
     *
     * Generated from protobuf field <code>.google.showcase.v1beta1.Test.ExpectationLevel expectation_level = 2;</code>
     * @return int
     */
    public function getExpectationLevel()
    {
        return $this->expectation_level;
    }

    /**
     * The expectation level for this test.
     *
     * Generated from protobuf field <code>.google.showcase.v1beta1.Test.ExpectationLevel expectation_level = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setExpectationLevel($var)
    {
        GPBUtil::checkEnum($var, \Google\Showcase\V1beta1\Test\ExpectationLevel::class);
        $this->expectation_level = $var;

        return $this;
    }

    /**
     * A description of the test.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * A description of the test.
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * The blueprints that will satisfy this test. There may be multiple blueprints
     * that can signal to the server that this test case is being exercised. Although
     * multiple blueprints are specified, only a single blueprint needs to be run to
     * signal that the test case was exercised.
     *
     * Generated from protobuf field <code>repeated .google.showcase.v1beta1.Test.Blueprint blueprints = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBlueprints()
    {
        return $this->blueprints;
    }

    /**
     * The blueprints that will satisfy this test. There may be multiple blueprints
     * that can signal to the server that this test case is being exercised. Although
     * multiple blueprints are specified, only a single blueprint needs to be run to
     * signal that the test case was exercised.
     *
     * Generated from protobuf field <code>repeated .google.showcase.v1beta1.Test.Blueprint blueprints = 4;</code>
     * @param array<\Google\Showcase\V1beta1\Test\Blueprint>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBlueprints($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Showcase\V1beta1\Test\Blueprint::class);
        $this->blueprints = $arr;

        return $this;
    }

}

